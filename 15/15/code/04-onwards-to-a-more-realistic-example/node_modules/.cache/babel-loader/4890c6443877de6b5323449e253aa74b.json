{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LillyCode\\\\Documents\\\\Youtube\\\\Max-100days\\\\15\\\\15\\\\code\\\\04-onwards-to-a-more-realistic-example\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport useHttp from './hooks/use-http';\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const url = 'https://max-complete-react-default-rtdb.europe-west1.firebasedatabase.app/tasks.json';\n\n  const transformTasks = tasksObj => {\n    const loadedTasks = [];\n\n    for (const taskKey in tasksObj) {\n      loadedTasks.push({\n        id: taskKey,\n        text: tasksObj[taskKey].text\n      });\n    }\n  };\n\n  const httpData = useHttp(url, transformTasks);\n  const {\n    isLoading,\n    error,\n    sendRequest: fetchTasks\n  } = httpData;\n  useEffect(() => {\n    fetchTasks();\n  }, [fetchTasks]);\n\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"sDjlTdCg6GhhLK7Hrsm36S5AQVY=\", false, function () {\n  return [useHttp];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/LillyCode/Documents/Youtube/Max-100days/15/15/code/04-onwards-to-a-more-realistic-example/src/App.js"],"names":["React","useEffect","useState","useCallback","useHttp","Tasks","NewTask","App","tasks","setTasks","url","transformTasks","tasksObj","loadedTasks","taskKey","push","id","text","httpData","isLoading","error","sendRequest","fetchTasks","taskAddHandler","task","prevTasks","concat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMQ,GAAG,GAAG,sFAAZ;;AAEA,QAAMC,cAAc,GAAIC,QAAD,IAAc;AAEnC,UAAMC,WAAW,GAAG,EAApB;;AAEA,SAAK,MAAMC,OAAX,IAAsBF,QAAtB,EAAgC;AAC9BC,MAAAA,WAAW,CAACE,IAAZ,CAAiB;AAAEC,QAAAA,EAAE,EAAEF,OAAN;AAAeG,QAAAA,IAAI,EAAEL,QAAQ,CAACE,OAAD,CAAR,CAAkBG;AAAvC,OAAjB;AACD;AACF,GAPD;;AASA,QAAMC,QAAQ,GAAGd,OAAO,CAACM,GAAD,EAAMC,cAAN,CAAxB;AAEA,QAAM;AAAEQ,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAAW,EAAEC;AAAjC,MAAgDJ,QAAtD;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAIA,QAAMC,cAAc,GAAIC,IAAD,IAAU;AAC/Bf,IAAAA,QAAQ,CAAEgB,SAAD,IAAeA,SAAS,CAACC,MAAV,CAAiBF,IAAjB,CAAhB,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AACE,MAAA,KAAK,EAAEf,KADT;AAEE,MAAA,OAAO,EAAEW,SAFX;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,OAAO,EAAEE;AAJX;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GArCQf,G;UAcUH,O;;;KAdVG,G;AAuCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport useHttp from './hooks/use-http';\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  const url = 'https://max-complete-react-default-rtdb.europe-west1.firebasedatabase.app/tasks.json';\n\n  const transformTasks = (tasksObj) => {\n\n    const loadedTasks = [];\n\n    for (const taskKey in tasksObj) {\n      loadedTasks.push({ id: taskKey, text: tasksObj[taskKey].text })\n    }\n  }\n\n  const httpData = useHttp(url, transformTasks);\n\n  const { isLoading, error, sendRequest: fetchTasks } = httpData;\n\n  useEffect(() => {\n    fetchTasks();\n  }, [fetchTasks]);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}