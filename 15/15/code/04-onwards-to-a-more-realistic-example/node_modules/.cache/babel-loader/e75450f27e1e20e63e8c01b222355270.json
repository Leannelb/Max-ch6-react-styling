{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LillyCode\\\\Documents\\\\Youtube\\\\Max-100days\\\\15\\\\15\\\\code\\\\04-onwards-to-a-more-realistic-example\\\\src\\\\components\\\\NewTask\\\\NewTask.js\",\n    _s = $RefreshSig$();\n\nimport useHttp from '../../hooks/use-http';\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskRequest\n  } = useHttp();\n\n  const createTask = taskData => {\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n\n    const createdTask = {\n      id: generatedId,\n      text: taskText\n    };\n    props.onAddTask(createdTask);\n  };\n\n  sendTaskRequest({\n    url: 'https://max-complete-react-default-rtdb.europe-west1.firebasedatabase.app/tasks.json',\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: {\n      text: taskText\n    }\n  }, createTask);\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"6gTdJezDYsiP/F1Gyb74gYigNhA=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["C:/Users/LillyCode/Documents/Youtube/Max-100days/15/15/code/04-onwards-to-a-more-realistic-example/src/components/NewTask/NewTask.js"],"names":["useHttp","Section","TaskForm","NewTask","props","isLoading","error","sendRequest","sendTaskRequest","createTask","taskData","generatedId","name","createdTask","id","text","taskText","onAddTask","url","method","headers","body","enterTaskHandler"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,WAAW,EAAEC;AAAhC,MAAoDR,OAAO,EAAjE;;AAEA,QAAMS,UAAU,GAAIC,QAAD,IAAc;AAC/B,UAAMC,WAAW,GAAGD,QAAQ,CAACE,IAA7B,CAD+B,CACI;;AACnC,UAAMC,WAAW,GAAG;AAAEC,MAAAA,EAAE,EAAEH,WAAN;AAAmBI,MAAAA,IAAI,EAAEC;AAAzB,KAApB;AAEAZ,IAAAA,KAAK,CAACa,SAAN,CAAgBJ,WAAhB;AACD,GALD;;AAOAL,EAAAA,eAAe,CAAC;AACdU,IAAAA,GAAG,EAAE,sFADS;AAEdC,IAAAA,MAAM,EAAE,MAFM;AAGdC,IAAAA,OAAO,EAAE;AACT,sBAAgB;AADP,KAHK;AAMdC,IAAAA,IAAI,EAAE;AAAEN,MAAAA,IAAI,EAAEC;AAAR;AANQ,GAAD,EAOZP,UAPY,CAAf;AASA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAEa,gBAAvB;AAAyC,MAAA,OAAO,EAAEjB;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAzBD;;GAAMH,O;UACsDH,O;;;KADtDG,O;AA2BN,eAAeA,OAAf","sourcesContent":["import useHttp from '../../hooks/use-http';\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\n\nconst NewTask = (props) => {\n  const {isLoading, error, sendRequest: sendTaskRequest } = useHttp();\n\n  const createTask = (taskData) => {\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = { id: generatedId, text: taskText };\n\n    props.onAddTask(createdTask);\n  }\n\n  sendTaskRequest({ \n    url: 'https://max-complete-react-default-rtdb.europe-west1.firebasedatabase.app/tasks.json', \n    method: 'POST', \n    headers: {\n    'Content-Type': 'application/json',\n    },\n    body: { text: taskText }\n  }, createTask);\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}