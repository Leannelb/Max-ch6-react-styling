{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LillyCode\\\\Documents\\\\Youtube\\\\Max-100days\\\\11\\\\code\\\\01-starting-project\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport MealItem from './MealItem/MealItem';\nimport Card from '../UI/Card';\nimport classes from './AvailableMeals.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  console.log('React.version ', React.version);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://max-complete-react-default-rtdb.europe-west1.firebasedatabase.app/meals.json');\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch meals');\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.mealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Content is Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.mealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    price: meal.price,\n    description: meal.description\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AvailableMeals, \"6pndJp/WWpMtmhSnoCH9k0tFnXc=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["C:/Users/LillyCode/Documents/Youtube/Max-100days/11/code/01-starting-project/src/components/Meals/AvailableMeals.js"],"names":["React","useState","useEffect","MealItem","Card","classes","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","console","log","version","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","error","message","mealsLoading","mealsError","mealsList","map","meal"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport MealItem from './MealItem/MealItem';\r\nimport Card from '../UI/Card';\r\nimport classes from './AvailableMeals.module.css';\r\n\r\n\r\nconst AvailableMeals = () => {\r\n    const [meals, setMeals] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [httpError, setHttpError] = useState();\r\n    console.log('React.version ', React.version);\r\n\r\n    useEffect(() => {\r\n        const fetchMeals = async () => {\r\n            const response = await fetch(\r\n                'https://max-complete-react-default-rtdb.europe-west1.firebasedatabase.app/meals.json'\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch meals');\r\n            }\r\n  \r\n            const responseData = await response.json();\r\n\r\n            const loadedMeals = [];\r\n\r\n            for (const key in responseData) {\r\n                loadedMeals.push({\r\n                    id: key,\r\n                    name: responseData[key].name,\r\n                    description: responseData[key].description,\r\n                    price: responseData[key].price\r\n                });\r\n            }\r\n\r\n            setMeals(loadedMeals);\r\n            setIsLoading(false);\r\n        };\r\n\r\n        fetchMeals().catch((error) => {\r\n            setIsLoading(false);\r\n            setHttpError(error.message);\r\n        });\r\n    }, []);\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <section className={classes.mealsLoading}>\r\n                <p>Content is Loading....</p>\r\n            </section>\r\n        );\r\n    }\r\n    if (httpError) {\r\n        return (\r\n            <section className={classes.mealsError}>\r\n                <p>{httpError}</p>\r\n            </section>\r\n        );\r\n    }\r\n    const mealsList = meals.map((meal) =>\r\n        <MealItem\r\n            key={meal.id}\r\n            id={meal.id}\r\n            name={meal.name}\r\n            price={meal.price}\r\n            description={meal.description}>\r\n        </MealItem>\r\n    )\r\n\r\n    return (\r\n        <section className={classes.meals}>\r\n            <Card>\r\n                <ul>{mealsList}</ul>\r\n            </Card>\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default AvailableMeals;"]},"metadata":{},"sourceType":"module"}