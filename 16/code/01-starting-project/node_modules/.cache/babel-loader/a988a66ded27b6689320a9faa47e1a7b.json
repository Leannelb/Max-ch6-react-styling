{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LillyCode\\\\Documents\\\\Youtube\\\\16\\\\code\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState();\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log('name input is valid');\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = event => {\n    // setEnteredNameTouched(true);\n    // console.log('enteredNameTouched ', setEnteredNameTouched);\n    console.log('event.target.value', event.target.value);\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmissionHandler = event => {\n    setEnteredNameTouched(true);\n    console.log('enteredNameTouched ', setEnteredNameTouched);\n    event.preventDefault();\n\n    if (!enteredName && enteredName.trim() === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n    const enteredValue = nameInputRef.current.value;\n    console.log('enteredName', enteredName);\n    console.log('enteredValue', enteredValue);\n    setEnteredName('');\n  };\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a name, name cannot blank!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"s70weT0embrPiI+Iitr6JcdNEoI=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/LillyCode/Documents/Youtube/16/code/01-starting-project/src/components/SimpleInput.js"],"names":["useEffect","useState","useRef","SimpleInput","props","nameInputRef","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","enteredNameTouched","setEnteredNameTouched","console","log","nameInputChangeHandler","event","target","value","formSubmissionHandler","preventDefault","trim","enteredValue","current","nameInputIsInvalid","nameInputClasses"],"mappings":";;;AACA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,YAAY,GAAGH,MAAM,EAA3B;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,EAA9C;AACA,QAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACS,kBAAD,EAAqBC,qBAArB,IAA8CV,QAAQ,CAAC,KAAD,CAA5D;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,kBAAJ,EAAwB;AACtBI,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD;AACF,GAJQ,EAIN,CAACL,kBAAD,CAJM,CAAT;;AAMA,QAAMM,sBAAsB,GAAGC,KAAK,IAAI;AACtC;AACA;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCE,KAAK,CAACC,MAAN,CAAaC,KAA/C;AACAV,IAAAA,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GALD;;AAOA,QAAMC,qBAAqB,GAAGH,KAAK,IAAI;AACrCJ,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,qBAAnC;AACAI,IAAAA,KAAK,CAACI,cAAN;;AAEA,QAAI,CAACb,WAAD,IAAgBA,WAAW,CAACc,IAAZ,OAAuB,EAA3C,EAA+C;AAC7CX,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACA;AACD;;AAEDA,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACA,UAAMY,YAAY,GAAGhB,YAAY,CAACiB,OAAb,CAAqBL,KAA1C;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BP,WAA3B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BQ,YAA5B;AAEAd,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAhBD;;AAkBA,QAAMgB,kBAAkB,GAAG,CAACf,kBAAD,IAAuBE,kBAAlD;AACA,QAAMc,gBAAgB,GAAGD,kBAAkB,GACvC,sBADuC,GAEvC,cAFJ;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAEL,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEM,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,GAAG,EAAEnB,YADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,EAAE,EAAC,MAHL;AAIE,QAAA,QAAQ,EAAES;AAJZ;AAAA;AAAA;AAAA;AAAA,cAFF,EAQGS,kBAAkB,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA3DD;;GAAMpB,W;;KAAAA,W;AA6DN,eAAeA,WAAf","sourcesContent":["\nimport { useEffect, useState, useRef } from 'react';\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState();\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log('name input is valid');\n    }\n  }, [enteredNameIsValid])\n\n  const nameInputChangeHandler = event => {\n    // setEnteredNameTouched(true);\n    // console.log('enteredNameTouched ', setEnteredNameTouched);\n    console.log('event.target.value', event.target.value);\n    setEnteredName(event.target.value);\n  }\n\n  const formSubmissionHandler = event => {\n    setEnteredNameTouched(true);\n    console.log('enteredNameTouched ', setEnteredNameTouched);\n    event.preventDefault();\n\n    if (!enteredName && enteredName.trim() === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n    const enteredValue = nameInputRef.current.value;\n    console.log('enteredName', enteredName);\n    console.log('enteredValue', enteredValue);\n\n    setEnteredName('');\n  }\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = nameInputIsInvalid\n    ? 'form-control invalid'\n    : 'form-control'\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          ref={nameInputRef}\n          type='text'\n          id='name'\n          onChange={nameInputChangeHandler}\n        />\n        {nameInputIsInvalid && <p>Please enter a name, name cannot blank!</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}