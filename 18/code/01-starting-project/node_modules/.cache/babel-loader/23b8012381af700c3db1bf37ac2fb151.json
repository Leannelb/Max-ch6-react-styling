{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LillyCode\\\\Documents\\\\Sites\\\\Max-100days\\\\18\\\\code\\\\01-starting-project\\\\src\\\\components\\\\Counter.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport classes from './Counter.module.css';\nimport { counterActions } from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  const counter = useSelector(state => state.counter);\n  const show = useSelector(state => state.showCounter);\n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggleCounter());\n  }; // dispatch calls reducer function in Redux\n\n\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n\n  const increaceHandler = () => {\n    dispatch(counterActions.increace(10));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttonContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementHandler,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaceHandler,\n        children: \"Increment by 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrementHandler,\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"GD/ow9YR7sIjDFYrV2wcllje4n0=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Counter;\nexport default Counter; // class Counter extends Component {\n//   incrementHandler() {\n//     this.props.increment();\n//   }\n//   decrementHandler() {\n//     this.props.decrement();\n//   }\n//   toggleCounterHandler() { }\n//   render() {\n//     return (\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}>{this.props.counter}</div>\n//         <div className={classes.buttonContainer}>\n//           <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n//           <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n//         </div>\n//         <button onClick={this.props.toggleCounterHandler}>Toggle Counter</button>\n//       </main>\n//     )\n//   }\n// }\n// const mapStateToProps = state => {\n//   return {\n//     counter: state.counter\n//   };\n// }\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     increment: () => dispatch({ type: 'increment' }),\n//     decrement: () => dispatch({ type: 'decrement' })\n//   }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(Counter);\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["C:/Users/LillyCode/Documents/Sites/Max-100days/18/code/01-starting-project/src/components/Counter.js"],"names":["useSelector","useDispatch","classes","counterActions","Counter","counter","state","show","showCounter","toggleCounterHandler","dispatch","toggleCounter","incrementHandler","increment","decrementHandler","decrement","increaceHandler","increace","value","buttonContainer"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,cAAT,QAA+B,UAA/B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAEpB,QAAMC,OAAO,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA3B;AACA,QAAME,IAAI,GAAGP,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACE,WAAhB,CAAxB;;AAEA,QAAMC,oBAAoB,GAAG,MAAM;AACjCC,IAAAA,QAAQ,CAACP,cAAc,CAACQ,aAAf,EAAD,CAAR;AACD,GAFD,CALoB,CASpB;;;AACA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BF,IAAAA,QAAQ,CAACP,cAAc,CAACU,SAAf,EAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BJ,IAAAA,QAAQ,CAACP,cAAc,CAACY,SAAf,EAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC5BN,IAAAA,QAAQ,CAACP,cAAc,CAACc,QAAf,CAAwB,EAAxB,CAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAM,IAAA,SAAS,EAAEf,OAAO,CAACG,OAAzB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,IAAI,iBAAI;AAAK,MAAA,SAAS,EAAEL,OAAO,CAACgB,KAAxB;AAAA,gBAAgCb;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFX,eAGE;AAAK,MAAA,SAAS,EAAEH,OAAO,CAACiB,eAAxB;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEP,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEI,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAEF,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE;AAAQ,MAAA,OAAO,EAAEL,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAlCD;;GAAML,O;UAEYJ,W,EACHA,W;;;KAHTI,O;AAoCN,eAAeA,OAAf,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport classes from './Counter.module.css';\nimport { counterActions } from '../store';\n\nconst Counter = () => {\n\n  const counter = useSelector(state => state.counter);\n  const show = useSelector(state => state.showCounter);\n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggleCounter());\n  };\n\n  // dispatch calls reducer function in Redux\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  }\n\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  }\n\n  const increaceHandler = () => {\n    dispatch(counterActions.increace(10));\n  }\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {show && <div className={classes.value}>{counter}</div>}\n      <div className={classes.buttonContainer}>\n        <button onClick={incrementHandler}>Increment</button>\n        <button onClick={increaceHandler}>Increment by 5</button>\n        <button onClick={decrementHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n\n// class Counter extends Component {\n//   incrementHandler() {\n//     this.props.increment();\n//   }\n\n//   decrementHandler() {\n//     this.props.decrement();\n//   }\n\n//   toggleCounterHandler() { }\n//   render() {\n//     return (\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}>{this.props.counter}</div>\n//         <div className={classes.buttonContainer}>\n//           <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n//           <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n//         </div>\n//         <button onClick={this.props.toggleCounterHandler}>Toggle Counter</button>\n//       </main>\n//     )\n//   }\n// }\n\n// const mapStateToProps = state => {\n//   return {\n//     counter: state.counter\n//   };\n// }\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     increment: () => dispatch({ type: 'increment' }),\n//     decrement: () => dispatch({ type: 'decrement' })\n//   }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(Counter);\n"]},"metadata":{},"sourceType":"module"}