{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst initalAuthState = {\n  isAuthenticated: false\n};\ncreateSlice({\n  name: 'authentication',\n  initialState: initalAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {\n      state.isAuthenticated;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["C:/Users/LillyCode/Documents/Sites/Max-100days/18/code/01-starting-project/src/store/index.js"],"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","initalAuthState","isAuthenticated","login","logout","store","reducer","counterActions","actions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,mBAAmB,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAA5B;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC7BM,EAAAA,IAAI,EAAE,SADuB;AAE7BC,EAAAA,YAAY,EAAEL,mBAFe;AAG7BM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACP,OAAN;AACH,KAHK;;AAINQ,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACP,OAAN;AACH,KANK;;AAONS,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACpBH,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACC,OAAvC;AACH,KATK;;AAUNC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACjBA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACH;;AAZK;AAHmB,CAAD,CAAhC;AAkBA,MAAMY,eAAe,GAAG;AACpBC,EAAAA,eAAe,EAAE;AADG,CAAxB;AAIAjB,WAAW,CAAC;AACRM,EAAAA,IAAI,EAAE,gBADE;AAERC,EAAAA,YAAY,EAAES,eAFN;AAGRR,EAAAA,QAAQ,EAAE;AACNU,IAAAA,KAAK,CAACR,KAAD,EAAQ;AACTA,MAAAA,KAAK,CAACO,eAAN,GAAwB,IAAxB;AACH,KAHK;;AAINE,IAAAA,MAAM,CAACT,KAAD,EAAQ;AACVA,MAAAA,KAAK,CAACO,eAAN;AACH;;AANK;AAHF,CAAD,CAAX;AAcA,MAAMG,KAAK,GAAGnB,cAAc,CAAC;AACzBoB,EAAAA,OAAO,EAAEhB,YAAY,CAACgB;AADG,CAAD,CAA5B;AAIA,OAAO,MAAMC,cAAc,GAAGjB,YAAY,CAACkB,OAApC;AAEP,eAAeH,KAAf","sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit';\r\n\r\nconst initialCounterState = { counter: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState: initialCounterState,\r\n    reducers: {\r\n        increment(state) {\r\n            state.counter++;\r\n        },\r\n        decrement(state) {\r\n            state.counter--;\r\n        },\r\n        increase(state, action) {\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n        toggleCounter(state) {\r\n            state.showCounter = !state.showCounter;\r\n        }\r\n    }\r\n});\r\nconst initalAuthState = {\r\n    isAuthenticated: false\r\n}\r\n\r\ncreateSlice({\r\n    name: 'authentication',\r\n    initialState: initalAuthState,\r\n    reducers: {\r\n        login(state) {\r\n            state.isAuthenticated = true;\r\n        },\r\n        logout(state) {\r\n            state.isAuthenticated\r\n        } \r\n\r\n    }\r\n});\r\n\r\nconst store = configureStore({\r\n    reducer: counterSlice.reducer\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}