{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nconst initalState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initalState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increace(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    decreace(state, action) {\n      state.counter = state.counter - action.amount;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\n\nconst counterReducer = (state = initalState, action) => {\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  ;\n\n  if (action.type === 'increace') {\n    return {\n      counter: state.counter + action.payload,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  ;\n\n  if (action.type === 'toggle') {\n    return {\n      showCounter: !state.showCounter\n    };\n  }\n}; // return: { type: 'auto generated unique identifier'}\n\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["C:/Users/LillyCode/Documents/Sites/Max-100days/18/code/01-starting-project/src/store/index.js"],"names":["configureStore","createSlice","initalState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increace","action","payload","decreace","amount","toggleCounter","counterReducer","type","store","reducer","counterActions","actions"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AAEA,MAAMC,WAAW,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAApB;AAEA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAC7BK,EAAAA,IAAI,EAAE,SADuB;AAE7BJ,EAAAA,WAF6B;AAG7BK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACN,OAAN;AACH,KAHK;;AAINO,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACN,OAAN;AACH,KANK;;AAONQ,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACpBH,MAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,OAAvC;AACH,KATK;;AAUNC,IAAAA,QAAQ,CAACL,KAAD,EAAQG,MAAR,EAAgB;AACpBH,MAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACG,MAAvC;AACH,KAZK;;AAaNC,IAAAA,aAAa,CAACP,KAAD,EAAQ;AACjBA,MAAAA,KAAK,CAACL,WAAN,GAAoB,CAACK,KAAK,CAACL,WAA3B;AACH;;AAfK;AAHmB,CAAD,CAAhC;;AAqBA,MAAMa,cAAc,GAAG,CAACR,KAAK,GAAGP,WAAT,EAAsBU,MAAtB,KAAiC;AACpD,MAAIA,MAAM,CAACM,IAAP,KAAgB,WAApB,EAAiC;AAC7B,WAAO;AACHf,MAAAA,OAAO,EAAEM,KAAK,CAACN,OAAN,GAAgB,CADtB;AAEHC,MAAAA,WAAW,EAAEK,KAAK,CAACL;AAFhB,KAAP;AAIH;;AAAA;;AAED,MAAIQ,MAAM,CAACM,IAAP,KAAgB,UAApB,EAAgC;AAC5B,WAAO;AACHf,MAAAA,OAAO,EAAEM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,OAD7B;AAEHT,MAAAA,WAAW,EAAEK,KAAK,CAACL;AAFhB,KAAP;AAIH;;AAED,MAAIQ,MAAM,CAACM,IAAP,KAAgB,WAApB,EAAiC;AAC7B,WAAO;AACHf,MAAAA,OAAO,EAAEM,KAAK,CAACN,OAAN,GAAgB,CADtB;AAEHC,MAAAA,WAAW,EAAEK,KAAK,CAACL;AAFhB,KAAP;AAIH;;AAAA;;AAED,MAAIQ,MAAM,CAACM,IAAP,KAAgB,QAApB,EAA8B;AAC1B,WAAO;AACHd,MAAAA,WAAW,EAAE,CAACK,KAAK,CAACL;AADjB,KAAP;AAGH;AACJ,CA3BD,C,CA6BA;;;AAEA,MAAMe,KAAK,GAAGnB,cAAc,CAAC;AACzBoB,EAAAA,OAAO,EAAEf,YAAY,CAACe;AADG,CAAD,CAA5B;AAIA,OAAO,MAAMC,cAAc,GAAGhB,YAAY,CAACiB,OAApC;AACP,eAAeH,KAAf","sourcesContent":["import { configureStore, createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initalState = { counter: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initalState,\r\n    reducers: {\r\n        increment(state) {\r\n            state.counter++;\r\n        },\r\n        decrement(state) {\r\n            state.counter--;\r\n        },\r\n        increace(state, action) {\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n        decreace(state, action) {\r\n            state.counter = state.counter - action.amount;\r\n        },\r\n        toggleCounter(state) {\r\n            state.showCounter = !state.showCounter;\r\n        }\r\n    }\r\n});\r\nconst counterReducer = (state = initalState, action) => {\r\n    if (action.type === 'increment') {\r\n        return {\r\n            counter: state.counter + 1,\r\n            showCounter: state.showCounter\r\n        };\r\n    };\r\n\r\n    if (action.type === 'increace') {\r\n        return {\r\n            counter: state.counter + action.payload,\r\n            showCounter: state.showCounter\r\n        }\r\n    }\r\n\r\n    if (action.type === 'decrement') {\r\n        return {\r\n            counter: state.counter - 1,\r\n            showCounter: state.showCounter\r\n        };\r\n    };\r\n\r\n    if (action.type === 'toggle') {\r\n        return {\r\n            showCounter: !state.showCounter\r\n        }\r\n    }\r\n}\r\n\r\n// return: { type: 'auto generated unique identifier'}\r\n\r\nconst store = configureStore({\r\n    reducer: counterSlice.reducer\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport default store;"]},"metadata":{},"sourceType":"module"}