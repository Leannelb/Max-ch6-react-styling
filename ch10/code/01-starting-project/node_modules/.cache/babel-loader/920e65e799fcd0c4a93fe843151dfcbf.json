{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LillyCode\\\\Documents\\\\Sites\\\\MaxCh6_Stylying\\\\ch10\\\\code\\\\01-starting-project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const storedUserIsLoggedIn = localStorage.getItem('isLoggedin');\n\n    if (storedUserIsLoggedIn === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []); //debugger;\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedin');\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn\n    },\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n        isAuthenticated: isLoggedIn,\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: loginHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 22\n        }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n          onLogout: logoutHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/LillyCode/Documents/Sites/MaxCh6_Stylying/ch10/code/01-starting-project/src/App.js"],"names":["React","useState","useEffect","Login","Home","MainHeader","AuthContext","App","isLoggedIn","setIsLoggedIn","storedUserIsLoggedIn","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler","removeItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMQ,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAA7B;;AAEA,QAAIF,oBAAoB,KAAK,GAA7B,EAAkC;AACjCD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA;AACD,GANQ,EAMN,EANM,CAAT,CAHc,CAWd;;AACA,QAAMI,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC;AACA;AACAJ,IAAAA,YAAY,CAACK,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACAP,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,GALD;;AAOA,QAAMQ,aAAa,GAAG,MAAM;AAC3BN,IAAAA,YAAY,CAACO,UAAb,CAAwB,YAAxB;AACAT,IAAAA,aAAa,CAAC,KAAD,CAAb;AAEA,GAJD;;AAMA,sBACC,QAAC,WAAD,CAAa,QAAb;AACC,IAAA,KAAK,EAAE;AACND,MAAAA,UAAU,EAAEA;AADN,KADR;AAAA,2BAKC,QAAC,KAAD,CAAO,QAAP;AAAA,8BACC,QAAC,UAAD;AAAY,QAAA,eAAe,EAAEA,UAA7B;AAAyC,QAAA,QAAQ,EAAES;AAAnD;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAA,mBACE,CAACT,UAAD,iBAAe,QAAC,KAAD;AAAO,UAAA,OAAO,EAAEK;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADjB,EAEEL,UAAU,iBAAI,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAES;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AALD;AAAA;AAAA;AAAA;AAAA,UADD;AAeA;;GAxCQV,G;;KAAAA,G;AA0CT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst storedUserIsLoggedIn = localStorage.getItem('isLoggedin');\n\n\t\tif (storedUserIsLoggedIn === '1') {\n\t\t\tsetIsLoggedIn(true);\n\t\t}\n\t}, []);\n\n\t//debugger;\n\tconst loginHandler = (email, password) => {\n\t\t// We should of course check email and password\n\t\t// But it's just a dummy/ demo anyways\n\t\tlocalStorage.setItem('isLoggedIn', '1')\n\t\tsetIsLoggedIn(true);\n\t};\n\n\tconst logoutHandler = () => {\n\t\tlocalStorage.removeItem('isLoggedin');\n\t\tsetIsLoggedIn(false);\n\n\t};\n\n\treturn (\n\t\t<AuthContext.Provider\n\t\t\tvalue={{\n\t\t\t\tisLoggedIn: isLoggedIn\n\t\t\t}}\n\t\t>\n\t\t\t<React.Fragment>\n\t\t\t\t<MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n\t\t\t\t<main>\n\t\t\t\t\t{!isLoggedIn && <Login onLogin={loginHandler} />}\n\t\t\t\t\t{isLoggedIn && <Home onLogout={logoutHandler} />}\n\t\t\t\t</main>\n\t\t\t</React.Fragment>\n\t\t</AuthContext.Provider>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}