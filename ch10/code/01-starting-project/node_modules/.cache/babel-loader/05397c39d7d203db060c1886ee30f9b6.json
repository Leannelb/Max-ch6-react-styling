{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LillyCode\\\\Documents\\\\Sites\\\\MaxCh6_Stylying\\\\ch10\\\\code\\\\01-starting-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer, useEffect } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passReducer = (state, action) => {\n  if (action.type === 'USER_PASS_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 3\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 3\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst [emailState, setEmailState] = setState();\nuseEffect(() => {\n  const identifier = setTimeout(() => {\n    console.log('Checking form validity');\n    setFormIsValid(emailState.isValid && passState.isValid);\n  }, 500);\n  return () => {\n    console.log('CLEANUP');\n    clearTimeout(identifier);\n  };\n}, [emailState, passState]);\n\nconst Login = props => {\n  _s();\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passState, dispatchPass] = useReducer(passReducer, {\n    value: '',\n    isValid: null\n  });\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.includes('@') && passState.isValid);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPass({\n      type: 'USER_PASS_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(emailState.value.includes('@') && event.target.value.trim().length > 4);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPass({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Login, \"tWMwUBRYagKUHe1dbFCRBUTiWEw=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/LillyCode/Documents/Sites/MaxCh6_Stylying/ch10/code/01-starting-project/src/components/Login/Login.js"],"names":["React","useState","useReducer","useEffect","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","passReducer","trim","length","emailState","setEmailState","setState","identifier","setTimeout","console","log","setFormIsValid","passState","clearTimeout","Login","props","formIsValid","dispatchEmail","dispatchPass","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, useEffect } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst emailReducer = (state, action) => {\n\t\n\tif (action.type === 'USER_INPUT') {\n\t\treturn { value: action.val, isValid: action.val.includes('@') };\n\t}\n\tif (action.type === 'INPUT_BLUR') {\n\t\treturn { value: state.value, isValid: state.value.includes('@') }\n\t}\n\treturn { value: '', isValid: false }\n};\n\nconst passReducer = (state, action) => {\n\tif (action.type === 'USER_PASS_INPUT') {\n\t\treturn { value: action.val, isValid: action.val.trim().length > 3 }\n\t}\n\tif (action.type === 'INPUT_BLUR') {\n\t\treturn { value: state.value, isValid: state.value.trim().length > 3 }\n\t}\n\treturn { value: '', isValid: false }\n}\n\nconst [emailState, setEmailState] = setState();\n\nuseEffect(() => {\n\tconst identifier = setTimeout(() => {\n\t\tconsole.log('Checking form validity');\n\t\tsetFormIsValid(\n\t\t\temailState.isValid && passState.isValid\n\t\t);\n\t}, 500);\n\n\treturn () => {\n\t\tconsole.log('CLEANUP');\n\t\tclearTimeout(identifier);\n\t};\n}, [emailState, passState]); \n\nconst Login = (props) => {\n\tconst [formIsValid, setFormIsValid] = useState(false);\n\n\tconst [emailState, dispatchEmail] = useReducer(emailReducer, { value: '', isValid: null });\n\tconst [passState, dispatchPass] = useReducer(passReducer, { value: '', isValid: null });\n\n\tconst emailChangeHandler = (event) => {\n\t\tdispatchEmail({ type: 'USER_INPUT', val: event.target.value })\n\n\t\tsetFormIsValid(\n\t\t\tevent.target.value.includes('@') && passState.isValid\n\t\t);\n\t};\n\n\tconst passwordChangeHandler = (event) => {\n\t\tdispatchPass({ type: 'USER_PASS_INPUT', val: event.target.value })\n\n\t\tsetFormIsValid(\n\t\t\temailState.value.includes('@') && event.target.value.trim().length > 4\n\t\t);\n\t};\n\n\tconst validateEmailHandler = () => {\n\t\tdispatchEmail({ type: 'INPUT_BLUR' })\n\t};\n\n\tconst validatePasswordHandler = () => {\n\t\tdispatchPass({ type: 'INPUT_BLUR' })\n\t};\n\n\tconst submitHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tprops.onLogin(emailState.value, passState.value);\n\t};\n\n\treturn (\n\t\t<Card className={classes.login}>\n\t\t\t<form onSubmit={submitHandler}>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`${classes.control} ${emailState.isValid === false ? classes.invalid : ''\n\t\t\t\t\t\t}`}\n\t\t\t\t>\n\t\t\t\t\t<label htmlFor=\"email\">E-Mail</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tvalue={emailState.value}\n\t\t\t\t\t\tonChange={emailChangeHandler}\n\t\t\t\t\t\tonBlur={validateEmailHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`${classes.control} ${passState.isValid === false ? classes.invalid : ''\n\t\t\t\t\t\t}`}\n\t\t\t\t>\n\t\t\t\t\t<label htmlFor=\"password\">Password</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\tvalue={passState.value}\n\t\t\t\t\t\tonChange={passwordChangeHandler}\n\t\t\t\t\t\tonBlur={validatePasswordHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.actions}>\n\t\t\t\t\t<Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</Card>\n\t);\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}